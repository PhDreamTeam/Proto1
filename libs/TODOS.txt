

// 0 is minimum priority


// TO DO NEXT ACTION ===========================================

/**
 * TODO 3 suporte a múltiplos masters
 * TODO ? Suporte à percepção de topologia e melhoramento das funcionalidades face à sua exploração
 * - Topologia 1:   M1 - M2 - M3
 * - considerar apenas masters e comunicação entre eles (como primeira abstracção)
 * - Partições com uuid e não com partId sequencial: o data set não tem ordem
 * - os DDs terem a mensagem que resultou na sua criação - para recuperação em caso de falha (em vez do parent)
 * - registar workers em round robin nos masters e o mesmo para os clientes
 * - criar uma tabela de configuração de routing de comunicação entre masters, para testes, simula topologia da rede
 */

TODO 3 Alterar o getData de forma a suportar dados de grande dimensão - eventualmente enviados directamente para o cliente (com pedido do cliente ou não)

TODO 2 suporte a pedidos incompletos/parciais -------  INWORK

TODO 2 cli usar nas operações do cliente o sistema de guardar as mensagens de envio e recepção e sincronismo na msg - sistematizar o código

TODO 2.5 colocar o Android operacional face às alterações feitas

TODO 2 TD2: Identificar a API dos serviços de comunicação que devemos utilizar
TODO 2 TD2: camada de comunicação no actor para disponibilizar sends transparentes à localização - redefinir o UntypedActor


TODO 1 TD1: gestão dos serviços - registo dos serviços no master (not done);
TODO 1 TD1: workers obtêm os serviços (not), escolhem (not), registam as suas escolhas no master(done);
TODO 1 TD1: clientes seleccionam serviços (not).
TODO 1 TD1: Válido para serviços e DDinternals



// TO DO ==============================================

// TODO 3 ms master die and live again:  keep original MasterRequest in new DDs
// TODO 3 ms reconstruct a lost DD by replaying saved operations
// TODO 3 ms masters save and load state, pending requests no need to be saved
// TODO 3 workers reconnect to masters after master termination

// TODO 2 ms Substitute client tells por CommunicationHelper.tell

// TODO 1 ms DDIntMaster e DDObjectMaster no constructor temos a Msg e outros parâmetros da msg, reduzir isto
// TODO 1 ms same as previous: also in methods: getData, forEach, ...


// DONE ===========================================================

// DONE generics on everything
// DONE Reduce operation, reduce to a single value
// DONE Merge operation, joins two DDs of same type

// DONE Photo service support - DDPartitionPhotoInternal, DDPartitionPhoto

// DONE filter, map, create, open, Count, Reduce, Merge

// DONE ms Substitute worker tells por CommunicationHelper.tell
// DONE masters works well with workers crashes


// New notes
/***************************************************************************/
Ponderar sobre se os dados dos DD's podem normalmente ser grandes. (podem não caber nas mensagens)
Sendo assim podemos obter um objecto com os dados ou com o proxy para obter os dados.
Ser possível pedir os dados diretamente ao worker e não passar pelo master...
Ter um getData e um getAllData?!?!?

